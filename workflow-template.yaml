apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: sample-workflow-template
  namespace: argo
spec:
  securityContext:
    runAsNonRoot: false
  entrypoint: checkout
  serviceAccountName: argo-workflow
  templates:
  - name: checkout
    inputs:
      parameters:
      - name: repo
      - name: revision
      artifacts:
      - name: source
        path: /src
        git:
          repo: "{{inputs.parameters.repo}}"
          revision: "{{inputs.parameters.revision}}"
          usernameSecret:
            name: github-access
            key: username
          passwordSecret:
            name: github-access
            key: token
    container:
      image: alpine/git
      command: [sh, -c]
      args:
        - "git status && ls -l && git rev-parse --short HEAD > /tmp/git-commit"
      workingDir: /src
    outputs:
      artifacts:
        - name: source
          path: /src
      parameters:
        - name: tag
          valueFrom:
            path: /tmp/git-commit
  - name: helm-bake
    inputs:
      artifacts:
      - name: source
        path: /src
    container:
      image: alpine/helm:latest
      command: [sh, -c]
      args: ["ls -al && helm template cicd-sample-app ."]
      workingDir: /src
  - name: helm-deploy
    inputs:
      artifacts:
      - name: source
        path: /src
    container:
      image: alpine/helm:latest
      command: [sh, -c]
      args: ["helm upgrade --install cicd-sample-app -n default ."]
      workingDir: /src
    outputs:
      artifacts:
      - name: source
        path: /src
  - name: helm-wait
    inputs:
      artifacts:
      - name: source
        path: /src
    container:
      image: alpine/helm:latest
      command: [sh, -c]
      args: ["sleep 30"]
      workingDir: /src
  - name: helm-destroy
    inputs:
      artifacts:
      - name: source
        path: /src
    container:
      image: alpine/helm:latest
      command: [sh, -c]
      args: ["helm uninstall -n default cicd-sample-app"]
      workingDir: /src